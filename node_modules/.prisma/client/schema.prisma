// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// prisma/models/User.model.prisma
model User {
  id         Int       @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String    @unique
  password   String
<<<<<<< HEAD
  // phone      String ? 
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
=======
  phone      String ? 
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
>>>>>>> 5fc3458375358663f3debc70751b0b1bec279d06
  location   Location? @relation(fields: [locationId], references: [id])
  locationId Int?
}

// prisma/models/Material.model.prisma
model Material {
<<<<<<< HEAD
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Rate        Rate[]
=======
  id          Int      @id @default(autoincrement())
  material    String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  rate        Rate[]
>>>>>>> 5fc3458375358663f3debc70751b0b1bec279d06
  location    Location? @relation(fields: [locationId], references: [id])
  locationId  Int?
}

// prisma/models/Location.model.prisma
model Location {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Rate        Rate[]
  users       User[]
  materials   Material[]
  suppliers   Supplier[]
  Dimensions  Dimensions[]
  Structures  Structures[]
}

// prisma/models/Supplier.model.prisma
model Supplier {
  id         Int       @id @default(autoincrement())
  name       String
  contact    String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Rate       Rate[]
  location   Location? @relation(fields: [locationId], references: [id])
  locationId Int?
}

// prisma/models/Rate.model.prisma
model Rate {
  id         Int      @id @default(autoincrement())
  price      Float
  locationId Int
  materialId Int
  supplierId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Foreign keys
  location     Location    @relation(fields: [locationId], references: [id])
  material     Material    @relation(fields: [materialId], references: [id])
  supplier     Supplier    @relation(fields: [supplierId], references: [id])
  Dimensions   Dimensions? @relation(fields: [dimensionsId], references: [id])
  dimensionsId Int?
  Structures   Structures? @relation(fields: [structuresId], references: [id])
  structuresId Int?
}

// model Bricks {
//   id        Int      @id @default(autoincrement())
//   name      String
//   length    Float
//   width     Float
//   height    Float
//   volume    Float
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   Rate      Rate[]
//   location  Location? @relation(fields: [locationId], references: [id])
//   locationId Int?
// }

model Dimensions {
  id         Int         @id @default(autoincrement())
  length     Float
  width      Float
  height     Float
  volume     Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  Rate       Rate[]
  location   Location?   @relation(fields: [locationId], references: [id])
  locationId Int?
  Materials  Mat[]
}

// structures.model.prisma
model Structures {
  id                  Int                   @id @default(autoincrement())
  name                String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  rates               Rate[]
  location            Location?             @relation(fields: [locationId], references: [id])
  locationId          Int?
  materials           Mat[]           @relation("StructuresMaterials")
  StructuresMaterials StructuresMaterials[]
}

// materials.model.prisma
model Mat {
  id                  Int                   @id @default(autoincrement())
  name                String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  dimensions          Dimensions?           @relation(fields: [dimensionsId], references: [id])
  dimensionsId        Int?
  structures          Structures[]          @relation("StructuresMaterials")
  StructuresMaterials StructuresMaterials[]
}

// structures-materials.model.prisma
model StructuresMaterials {
  structureId Int
  materialId  Int

  structure Structures @relation(fields: [structureId], references: [id])
  material  Mat  @relation(fields: [materialId], references: [id])

  @@id([structureId, materialId])
}
